<%- include("partials/header")-%>

<style>
  body {
    background-image: url(../images/course_bg.jpg);
    font-family: Arial, sans-serif;
    margin: 0;
    padding: 0;
  }

  h1 {
    font-size: 36px;
    margin: 20px;
    color: #333;
    text-align: center;
    text-decoration: underline;
  }

  h2 {
    font-size: 30px;
    margin: 10px 0;
  }

  h4 {
    font-size: 18px;
    margin: 5px 0;
    margin-left: 2px;
  }

  p {
    margin: 10px 0;
  }

  form {
    display: inline-block;
    margin-left: 10px;
  }

  button {
    background-color: #007bff;
    color: white;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    margin: 5px;
  }

  button:hover {
    background-color: #0062cc;
  }

  .success {
    color: green;
  }

  .unSuccess {
    color: red;
  }

  /* Add styles for cards */
  .card-container {
    display: flex;
    flex-wrap: wrap;
    justify-content: center;
    gap: 20px; /* Adjust the gap as needed */
    padding: 20px; /* Add padding to the container */
    
  }

  .card {
    width: 350px; /* Adjust the card width as needed */
    margin: 0;
    padding: 15px;
    background-color: rgb(209, 233, 233);
  }
</style>

<body>
  <% if (course.length > 0) { %>
    <% if (all.length > 0) { %>
      <% course.sort(function (a, b) {
        const classA = parseInt(a.classs.match(/\d+/)[0]);
        const classB = parseInt(b.classs.match(/\d+/)[0]);
        return classA - classB;
      }); %>
      <h1><u>All The Courses Available:</u></h1>
    <% } else { %>
      <h1><u>Available Courses for <%= course[0].classs %></u></h1>
    <% } %>
    <p class="success"><%= msg %></p>
    <p class="unSuccess"><%= msgUn %></p>
    <h3>Tutors:</h3>
    <div class="card-container">
      <% course.forEach(function (tutor) { %>
        <div class="card">
          <h4><%= tutor.courseName %></h4>
          <p><strong>Tutor :</strong> <%= tutor.teacher_name %></p>
          <% if (all.length > 0) { %>
            <p><strong><%= tutor.classs.slice(0, 5) %>: <%= tutor.classs.slice(5) %></strong></p>
          <% } %>
          <p><strong>Price :</strong> Rs.<%= tutor.fees %></p>
          <form onsubmit="event.preventDefault(); makePayment('<%= tutor._id %>', '<%= tutor.fees %>', '<%= tutor.classs %>');">
            <input type="hidden" name="courseId" value="<%= tutor._id %>">
            <input type="hidden" name="amount" value="<%= tutor.fees %>">
            <% if (user) { %>
              <button type="submit">Buy</button>
            <% } else { %>
              <button type="submit" onclick="redirectToLogin()">Please log in to proceed</button>
            <% } %>
            <script>
              function redirectToLogin() {
                window.location.href = '/login'; 
              }
            </script>
          </form>
        </div>
      <% }); %>
    </div>
  <% } else { %>
    <p>Finding teachers for this class</p>
  <% } %>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/3.1.9-1/crypto-js.js"></script>
  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
    function encrypt(data, secretKey) {
    const encrypted = CryptoJS.AES.encrypt(data, secretKey);
    return encrypted.toString();
  }
    function makePayment(courseId, amount, classs) {
      
      fetch('/payment', {
        method: 'POST',headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ courseId: courseId }) // Send the courseId to the server
    }).then((response) => response.json())
.then((order) => {
  const options = {
    key: 'rzp_test_gweFtrGgAHg1sk',
    amount: amount * 100, // Assuming the amount is in rupees
    currency: 'INR',
    name: 'Tutors Academy',
    description: 'nothing',
    image: 'https://yourcompany.com/logo.png', // URL of your logo
    order_id: order.id,
    // handling the success
    handler: function (response) {
      // console.log(process.env.RAZORPAY_KEY_ID);
    const paymentId = response.razorpay_payment_id;
    // const encryptionKey = 'my-secret-key'; // Replace with your actual secret key
    // const encryptedPaymentId = encrypt(paymentId, encryptionKey);
    // const encryptedCourseId = encrypt(courseId, encryptionKey);
    // const encryptedClasss = encrypt(classs, encryptionKey);
    const encryptedPaymentId = paymentId;
    const encryptedCourseId = courseId;
    const encryptedClasss = classs;
      console.log(encryptedClasss);
    const encryptedUrl = `/payment-success?epayment_id=${encryptedPaymentId}&ecourseId=${encryptedCourseId}&eclasss=${encryptedClasss}`;
    window.location.href = encryptedUrl;

},

  };

  const rzp1 = new Razorpay(options);
  rzp1.open();
})
.catch((error) => {
  console.error(error);
  alert('An error occurred');
});

    }
  </script>
  
  
  <div>
    <div style="margin-left: 10%;">
      
    </div>
    
    
    <hr>
  </div>

<%- include("partials/footer")-%>



    